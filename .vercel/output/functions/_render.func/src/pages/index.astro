---
import Layout from "../layouts/Layout.astro";
import React from "react";
import { sanityClient } from "sanity:client";
import type { Product } from "../types/types";
import urlFor from "../utils/urlFor";
// const products: Product[] = await sanityClient.fetch(`*[_type == "product"]`);

---

<Layout title="fashionCulture | Unleash Your Style Potential">
	<main>
		<section class="landing-page">
			<div class="landing-page-container">
				<div class="landing-page-wrapper">
					<div class="hero-page-left-col">
						<h1>UNLEASH YOUR STYLE POTENTIAL</h1>
						<p class="paragraph-landing-page">
							Discover fashion that empowers you. Embrace your
							individuality with our carefully curated collection
							of clothes designed to make a statement.
						</p>
						<div class="CTA-buttons">
							<a href="/shop">See all products</a>
							<a href="/contact">Get in touch</a>
						</div>
						<div class="facts-landing-page">
							<span><p class="fact">1M+</p><p>Customers</p></span>
							<span><p class="fact">200+</p><p>Products</p></span>
							<span><p class="fact">10</p><p>Stores</p></span>
						</div>
					</div>

					<div class="hero-page-right-col">
						<div class="hero-page-images">
							<img
								src="/images/moon.svg"
								class="hero-page-moon-svg"
							/>
							<img
								src="/images/hero-page-guy.svg"
								class="hero-page-guy-svg"
							/>
						</div>
					</div>
				</div>
			</div>
		</section>
		<!-- end of landing page section -->

		<!-- second section -->
		<section class="second-section">
			<div class="second-section-container">
				<div class="second-section-cards">
					<div class="second-section-col jackets">
						<h2 class="second-section-title">
							FIND YOUR PERFECT FIT
						</h2>
						<p>
							Explore our diverse categories and uncover clothing
							that suits your lifestyle. From chic essentials to
							bold statement pieces, we have it all.
						</p>
						<img src="images/jackets.svg" alt="jackets" />
						<h1 class="absolute-paragraph">JACKETS</h1>
					</div>
					<div class="second-section-col pants">
						<img src="images/pants.png" alt="pants" />
						<h1 class="absolute-paragraph">PANTS</h1>
					</div>
					<div class="second-section-col shorts">
						<img src="images/shorts.png" alt="shorts" />
						<h1 class="absolute-paragraph">SHORTS</h1>
					</div>
				</div>
			</div>
		</section>
		<!-- end of second section -->

		<!-- third section -->
		<!-- <section class="slider-section">
			<div class="slider-container">
				<h3 class="slider-title">ELEVATE YOUR WARDROBE</h3>
				<p class="slider-description">
					Upgrade your style with our premium clothing selection.
					Explore our range of fashionable garments that blend
					quality, comfort, and trendsetting designs.
				</p>

				<div class="slider-wrapper">
					<button
						class="slider-prev-button"
						aria-label="Previous slide">&lt;</button
					>
					<div class="slider">
						<div class="slider-slides">
							{
								products.map((product) => (
									<div class="slider-slide">
										<a href={`/product/${product.slug.current}`}>
											<img
												src={urlFor(
													product.image,
												)?.url()}
												alt={product.title as string}
											/>
											<div class="slider-product-details">
												<p class="slider-product-title title-1">
													{product.title}
												</p>
												<p class="slider-product-price title-1">
													${product.price}
												</p>
											</div>
										</a>
									</div>
								))
							}
						</div>
					</div>
					<button class="slider-next-button" aria-label="Next slide"
						>&gt;</button
					>
				</div>
			</div>
		</section> -->

		<!-- end of third section -->
	</main>
	<script>
		document.addEventListener("DOMContentLoaded", () => {
			const section = document.querySelector(
				".second-section",
			) as HTMLElement | null;
			const cols = document.querySelectorAll<HTMLElement>(
				".second-section-col",
			);

			if (section) {
				const observer = new IntersectionObserver(
					(entries) => {
						entries.forEach((entry) => {
							if (entry.isIntersecting) {
								cols.forEach((col, index) => {
									if (col) {
										col.style.animationDelay = `${index * 0.2 + 0.3}s`;
										col.classList.add("animate");
									}
								});
								observer.unobserve(section); // Stop observing after animation triggers
							}
						});
					},
					{
						threshold: 0.1, // Trigger when 10% of the section is in view
					},
				);

				observer.observe(section);
			}
		});

		// carousel ### third section functionality ###

		document.addEventListener("DOMContentLoaded", function () {
			const slider = document.querySelector(
				".slider",
			) as HTMLElement | null;
			const slides =
				document.querySelectorAll<HTMLElement>(".slider-slide");
			const prevButton = document.querySelector(
				".slider-prev-button",
			) as HTMLButtonElement | null;
			const nextButton = document.querySelector(
				".slider-next-button",
			) as HTMLButtonElement | null;

			if (slides.length > 0 && slider) {
				let scrollAmount = 0;
				const slideWidth = slides[0]?.offsetWidth || 0;
				const maxScroll = slider.scrollWidth - slider.clientWidth;

				if (nextButton && prevButton) {
					nextButton.addEventListener("click", () => {
						if (scrollAmount < maxScroll) {
							slider.scrollBy({
								left: slideWidth,
								behavior: "smooth",
							});
							scrollAmount += slideWidth;
						} else {
							slider.scrollTo({ left: 0, behavior: "smooth" });
							scrollAmount = 0;
						}
					});

					prevButton.addEventListener("click", () => {
						if (scrollAmount > 0) {
							slider.scrollBy({
								left: -slideWidth,
								behavior: "smooth",
							});
							scrollAmount -= slideWidth;
						} else {
							slider.scrollTo({
								left: maxScroll,
								behavior: "smooth",
							});
							scrollAmount = maxScroll;
						}
					});

					// Auto-slide every 5 seconds
					setInterval(() => {
						if (scrollAmount < maxScroll) {
							slider.scrollBy({
								left: slideWidth,
								behavior: "smooth",
							});
							scrollAmount += slideWidth;
						} else {
							slider.scrollTo({ left: 0, behavior: "smooth" });
							scrollAmount = 0;
						}
					}, 5000);
				}
			}
		});
	</script>
</Layout>

<style>
	/* hero section */
	.landing-page {
		background-color: #f7f7f7;
		width: 100%;
		height: 100vh;
		display: flex;
		justify-content: center;
	}
	.landing-page-container {
		display: flex;
	}
	.landing-page-wrapper {
		display: flex;
		flex-direction: column;
		justify-content: center;
	}
	.paragraph-landing-page {
		margin-top: 22.5px;
	}
	.CTA-buttons {
		display: flex;
		flex-direction: column;
		text-align: center;
		gap: 1em;
		margin-top: 22px;
		margin-bottom: 27px;
		text-transform: uppercase;
	}
	.CTA-buttons > :first-child {
		background-color: #000000;
		color: #fff;
		text-decoration: none;
		padding: 16px 32px;
		flex: 1;
	}
	.CTA-buttons > :nth-last-child(1) {
		background-color: white;
		color: #000;
		text-decoration: none;
		padding: 16px 32px;
		border: 1px solid #000000;
		align-items: center;
		flex: 1;
	}
	.facts-landing-page {
		display: flex;
		flex-wrap: wrap;
		justify-content: center;
		gap: 1.7em;
	}
	.fact {
		font-size: 25px;
		font-weight: 600;
	}
	.hero-page-left-col {
		max-width: 100%;
		padding: 20px;
		display: flex;
		justify-content: center;
		text-align: center;
		flex-direction: column;
		animation: fadeInLeftFromGround 1s ease-out forwards;
	}
	.hero-page-right-col {
		display: none;
		animation: fadeInRightFromGround 1s ease-out forwards;
	}
	.hero-page-images {
		position: relative;
	}
	.hero-page-moon-svg {
		position: absolute;
		top: 50%;
		left: 0;
		transform: translateY(-50%);
		max-width: 100%;
		height: auto;
	}

	.hero-page-guy-svg {
		position: relative;
		margin-bottom: -4px;
		left: 0%;
		max-width: 100%;
		height: auto;
	}
	/* Keyframe animations */
	@keyframes fadeInLeftFromGround {
		from {
			opacity: 0;
			transform: translate(
				-50px,
				50px
			); /* 35-degree angle from the bottom-left */
		}
		to {
			opacity: 1;
			transform: translate(0, 0); /* Final position */
		}
	}

	@keyframes fadeInRightFromGround {
		from {
			opacity: 0;
			transform: translate(
				50px,
				50px
			); /* 35-degree angle from the bottom-right */
		}
		to {
			opacity: 1;
			transform: translate(0, 0); /* Final position */
		}
	}
	/* end of hero section */
	.second-section-container {
		max-width: 1400px;
		margin: 0 auto;
		text-align: center;
		padding: 0px 20px;
	}

	.second-section-title {
		margin-bottom: 10px;
	}
	.second-section-col.jackets img {
		margin-top: 20px;
	}
	.second-section-cards {
		margin-top: 15px;
		display: grid;
		grid-template-columns: 1fr;
		grid-template-rows: repeat(3, 1fr);
		grid-gap: 20px;
		justify-items: center;
		align-items: center;
	}

	.second-section-col {
		position: relative;
		width: 100%;
		height: 100%;
		overflow: hidden;
		text-align: center;
		margin-top: auto;
	}

	.second-section-cards img {
		width: 100%;
		height: 100%;
		object-fit: cover;
	}

	.absolute-paragraph {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, 50%);
		color: #fff;
	}

	@media screen and (min-width: 1024px) {
		.second-section-cards {
			grid-template-columns: 2fr 1fr;
			grid-template-rows: repeat(2, 1fr);
			grid-gap: 20px;
		}
		.second-section-col.jackets {
			text-align: start;
			grid-column: 1 / 2;
			grid-row: 1 / 3;
		}
		.second-section-col.pants {
			grid-column: 2 / 3;
			grid-row: 1 / 2;
		}
		.second-section-col.shorts {
			grid-column: 2 / 3;
			grid-row: 2 / 3;
		}
	}
	/* Keyframe animations */
	@keyframes fadeInUp {
		from {
			opacity: 0;
			transform: translateY(20px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}

	@keyframes scaleIn {
		from {
			opacity: 0;
			transform: scale(0.95);
		}
		to {
			opacity: 1;
			transform: scale(1);
		}
	}

	/* Initial state */
	.second-section-col {
		opacity: 0;
		transform: translateY(20px) scale(0.95); /* Combine initial transforms */
		transition:
			opacity 0.8s ease-out,
			transform 0.8s ease-out;
	}

	/* Animation when .animate class is added */
	.second-section-col.animate {
		opacity: 1;
		transform: translateY(0) scale(1); /* Final state */
	}

	/* end of second section */

	/* third section */
	.slider-section {
		width: 100%;
		padding: 20px 0px;
	}

	.slider-container {
		max-width: 1400px;
		margin: 0 auto;
		padding: 0px 20px;
		text-align: center;
	}

	.slider-title {
		margin-top: 50px;
		margin-bottom: 10px;
	}

	.slider-description {
		margin-bottom: 20px;
		font-size: 12px;
		text-transform: uppercase;
	}

	.slider-wrapper {
		position: relative;
		display: flex;
		align-items: center;
	}

	.slider {
		overflow-x: auto;
		display: flex;
		justify-content: flex-start;
		align-items: center;
		scroll-behavior: smooth;
		-webkit-overflow-scrolling: touch;
	}
	.slider::-webkit-scrollbar {
		display: none;
	}
	.slider-slides {
		display: flex;
		flex-wrap: nowrap;
	}
	.slider-slide {
		width: 350px;
		min-height: 300px;
		margin-right: 20px;
		text-align: center;
		display: flex;
		justify-content: center;
		align-items: center;
	}

	.slider-slide img {
		width: 100%;
		height: 100%;
		object-fit: cover;
		display: block;
		background-color: #f7f7f7;
		aspect-ratio: 3/4;
	}

	.slider-product-details {
		display: flex;
		flex-direction: column;
		align-items: flex-start;
		margin-top: 7px;
	}
	.slider-product-title,
	.slider-product-price {
		color: #333333;
		font-size: 12px;
	}

	.slider-prev-button,
	.slider-next-button {
		display: none;
		position: absolute;
		top: 50%;
		transform: translateY(-50%);
		background-color: rgba(0, 0, 0, 0.5);
		color: white;
		border: none;
		padding: 10px;
		cursor: pointer;
		z-index: 10;
	}

	.slider-prev-button {
		left: 10px;
	}

	.slider-next-button {
		right: 10px;
	}

	@media screen and (min-width: 768px) {
		.hero-page-left-col {
			max-width: 500px;
		}
		.slider-prev-button,
		.slider-next-button {
			display: block;
		}
	}

	/* end of third section */

	@media screen and (min-width: 1024px) {
		.landing-page-container {
			max-width: 1400px;
			padding: 20px;
			flex-grow: 1;
			justify-content: center;
		}
		.landing-page-wrapper {
			flex-direction: row;
			flex-grow: 1;
			justify-content: space-between;
		}
		.hero-page-left-col {
			align-items: flex-start;
			text-align: start;
			padding: 0px;
		}
		.hero-page-right-col {
			max-width: 600px;
			display: flex;
			align-items: flex-end;
		}

		.CTA-buttons {
			flex-direction: row;
			min-width: 100%;
		}
		.facts-landing-page {
			justify-content: flex-start;
		}
	}

	@media screen and (min-width: 1200px) {
		.landing-page-wrapper {
		}
	}
	@media screen and (max-width: 600px) {
		.CTA-buttons {
			min-width: 100%;
		}
	}
	@media screen and (max-width: 1024px) {
		.CTA-buttons {
			min-width: 280px;
		}
	}
</style>
