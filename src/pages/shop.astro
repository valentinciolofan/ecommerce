---
import Layout from "../layouts/Layout.astro";
import Product from "../components/ReactComponents/Product";
import { sanityClient } from "sanity:client";
import imageUrlBuilder from "@sanity/image-url";

let query = `*[_type == "product"]`;
let products = await sanityClient.fetch(query);

const builder = imageUrlBuilder(sanityClient);
function urlFor(source) {
    return builder.image(source);
}

const urlActual = Astro.url.searchParams;
const selectedCategories = urlActual.getAll("category");

query = `
  *[_type == "product" && count((categories[]->title)[][@ in $selectedCategories]) > 0]{
    ..., // All other fields you need from the product
    categories[]->{title} // Replace the reference with the category title
  }
`;

products = await sanityClient.fetch(query, { selectedCategories });

console.log(products);
---

<Layout title="Ecommerce Products">
    <!--Filters -->
    <button id="btnFilters" type="button"
        ><svg
            xmlns="http://www.w3.org/2000/svg"
            width="1em"
            height="1em"
            viewBox="0 0 24 24"
            ><path
                fill="currentColor"
                d="M22 18.605a.75.75 0 0 1-.75.75h-5.1a2.93 2.93 0 0 1-5.66 0H2.75a.75.75 0 1 1 0-1.5h7.74a2.93 2.93 0 0 1 5.66 0h5.1a.75.75 0 0 1 .75.75m0-13.21a.75.75 0 0 1-.75.75H18.8a2.93 2.93 0 0 1-5.66 0H2.75a.75.75 0 1 1 0-1.5h10.39a2.93 2.93 0 0 1 5.66 0h2.45a.74.74 0 0 1 .75.75m0 6.6a.74.74 0 0 1-.75.75H9.55a2.93 2.93 0 0 1-5.66 0H2.75a.75.75 0 1 1 0-1.5h1.14a2.93 2.93 0 0 1 5.66 0h11.7a.75.75 0 0 1 .75.75"
            ></path></svg
        ></button
    >
    <div>
        <h1>Find Your Style</h1>
        <div class="filters-section">
            <div class="filters-col1">
                <p>Filters</p>
                <span id="closeFilters"
                    ><svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="1em"
                        height="1em"
                        viewBox="0 0 24 24"
                        ><path
                            fill="currentColor"
                            d="m6.4 18.308l-.708-.708l5.6-5.6l-5.6-5.6l.708-.708l5.6 5.6l5.6-5.6l.708.708l-5.6 5.6l5.6 5.6l-.708.708l-5.6-5.6z"
                        ></path></svg
                    ></span
                >
            </div>

            <div class="filters-body">
                <!--filter options -->
                <div>
                    <!--categories -->
                    <div class="filterBy">
                        <a href="javascript:void(0);" id="categories"
                            >Categories</a
                        >
                    </div>
                    <!-- below you can add more filter options -->
                </div>
                <!-- elements for filtering options -->
                <div>
                    <!-- below you can add a div with checkboxes for each filtering option -->
                    <div class="filter-by-category">
                        <form method="POST">
                            <label class="custom-checkbox">
                                <input type="checkbox" id="shirts" name="category" value="Shirts" />
                                <span class="checkmark"></span>
                                Shirts
                              </label>
                              
                              <label class="custom-checkbox">
                                <input type="checkbox" id="pants" name="category" value="Pants" />
                                <span class="checkmark"></span>
                                Pants
                              </label>

                              <label class="custom-checkbox">
                                <input type="checkbox" id="jackets" name="category" value="Jackets" />
                                <span class="checkmark"></span>
                                Jackets
                              </label>

                            <input 
                            type="submit"
                            value="Show the results"
                            class="btn-form-submit"
                            />
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End of filters -->

    <div class="all-products">
        <ul>
            {
                products.map((product) => (
                    <li>
                        <a href={"/product/" + product.slug.current}>
                            <div class="products">
                                <img src={urlFor(product.images[0]).url()} />
                                <div class="product-details">
                                    <span>{product.title}</span>
                                    <span>${product.price}</span>
                                </div>
                            </div>
                        </a>
                    </li>
                ))
            }
        </ul>
    </div>
</Layout>

<style>
    .all-products ul {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        list-style-type: none;
        gap: 20px;
    }
    .products img {
        height: 250px;
        min-width: 100%; 
        object-fit: cover;
    }
    .all-products ul li a {
        text-decoration: none;
        color: #000;
        text-transform: uppercase;
        font-family: "Lato", sans-serif;
        font-weight: 700;
        font-style: normal;
    }
    .product-details {
        display: flex;
        justify-content: space-between;
    }
    .filters-section {
        padding: 0px 21.5px;
        display: none;
        flex-direction: column;
        background-color: #c4bfbf;
        height: 100vh;
    }
    .filters-col1 {
        display: flex;
        padding: 1.3rem 0px;
        justify-content: space-between;
    }
    .filters-body {
        display: flex;
    }
    .filterBy a {
        text-decoration: none;
        color: #000;
        padding: 10px 5px;
    }
    .filterBy a:hover {
        background-color: #cac8c8;
    }
    .filtering-options {
        display: flex;
        flex-direction: column;
        padding: 0px 50px 0px 25px;
    }
    .filter-by-category {
        display: flex;
        flex-direction: column;
        padding: 0px 50px 0px 25px;
    }
    .btn-form-submit {
        background-color: #000;
        padding: 16px 32px;
        cursor: pointer;
        color: #fff;
        border: none;
        border-radius: 4px;
    }
    /* Hide the default checkbox */
.custom-checkbox input[type="checkbox"] {
  display: none;
}

/* Create a custom checkbox */
.custom-checkbox .checkmark {
  display: inline-block;
  width: 20px;
  height: 20px;
  background: white;
  border: 1px solid black;
  margin-right: 8px;
  vertical-align: middle;
  position: relative;
}

/* When the checkbox is checked, add a black background */
.custom-checkbox input[type="checkbox"]:checked + .checkmark {
  background: black;
}

/* Style the checkmark/indicator (hidden when not checked) */
.custom-checkbox .checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.custom-checkbox input[type="checkbox"]:checked + .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.custom-checkbox .checkmark:after {
  left: 7px;
  top: 3px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}


    @media screen and (min-width: 768px) {
        .products img {
            max-width: 350px;
            min-height: auto;
        }
    }
</style>

<script>
    // filters section js code
    const btnFilters = document.getElementById("btnFilters");
    const closeFilters = document.getElementById("closeFilters");

    btnFilters?.addEventListener("click", () => {
        let filtersSection = document.querySelector(".filters-section");
        if (filtersSection.style.display != "block")
            filtersSection.style.display = "flex";
    });

    closeFilters.addEventListener("click", () => {
        let filtersSection = document.querySelector(".filters-section");
        filtersSection.style.display = "none";
    });

 

    // end of filters section js code

    // basically, if i go on with astro it will be static rendering so i need to implement the changes statically.
    // Now i understand why the most webshops have a button to show the results for query, because it is a script behind that allows to do it s thing and then you can show the products based on that thing.
    //find out more details about frontmatter and server side rendering
</script>
