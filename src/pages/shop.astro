---
import Layout from "../layouts/Layout.astro";
import { sanityClient } from "sanity:client";
import FiltersWrapper from "../components/ReactComponents/FiltersWrapper.jsx";
import { addToCart } from "../components/UserContext";
import type { Product, Category } from "../types/types";

const productQuery = `*[_type == "product"] {
  title, slug, description, price, image, images, stock, categories->{title, slug}, color, size, material, availability, rating
}`;
const categoryQuery = `*[_type == "category"] {
  title, slug, parentCategory->{title, slug}
}`;

const products: Product[] = await sanityClient.fetch(productQuery);
const categories: Category[] = await sanityClient.fetch(categoryQuery);

const filters = {
    minPrice: 0,
    maxPrice: 1000,
};
// let query = `*[_type == "product"]`;
// let products = await sanityClient.fetch(query);

// const urlActual = Astro.url.searchParams;
// const selectedCategories = urlActual.getAll("category");

// query = `
//   *[_type == "product" && count((categories[]->title)[][@ in $selectedCategories]) > 0]{
//     ..., // All other fields you need from the product
//     categories[]->{title} // Replace the reference with the category title
//   }
// `;
---

<Layout title="Ecommerce Products">
    <!--Filters -->
    <div>
        <h1>Find Your Style</h1>
        <div class="filters-section">
            <div class="filters-col1">
                <p>Filters</p>
                <span id="closeFilters"
                    ><svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="1em"
                        height="1em"
                        viewBox="0 0 24 24"
                        ><path
                            fill="currentColor"
                            d="m6.4 18.308l-.708-.708l5.6-5.6l-5.6-5.6l.708-.708l5.6 5.6l5.6-5.6l.708.708l-5.6 5.6l5.6 5.6l-.708.708l-5.6-5.6z"
                        ></path></svg
                    ></span
                >
            </div>

            <div class="filters-body">
                <!--filter options -->
                <div>
                    <!--categories -->
                    <div class="filterBy">
                        <a href="javascript:void(0);" id="categories"
                            >Categories</a
                        >
                    </div>
                    <!-- below you can add more filter options -->
                </div>
                <!-- elements for filtering options -->
                <div>
                    <!-- below you can add a div with checkboxes for each filtering option -->
                    <div class="filter-by-category">
                        <form method="POST">
                            <label class="custom-checkbox">
                                <input
                                    type="checkbox"
                                    id="shirts"
                                    name="category"
                                    value="Shirts"
                                />
                                <span class="checkmark"></span>
                                Shirts
                            </label>

                            <label class="custom-checkbox">
                                <input
                                    type="checkbox"
                                    id="pants"
                                    name="category"
                                    value="Pants"
                                />
                                <span class="checkmark"></span>
                                Pants
                            </label>

                            <label class="custom-checkbox">
                                <input
                                    type="checkbox"
                                    id="jackets"
                                    name="category"
                                    value="Jackets"
                                />
                                <span class="checkmark"></span>
                                Jackets
                            </label>

                            <input
                                type="submit"
                                value="Show the results"
                                class="btn-form-submit"
                            />
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End of filters -->

    <!-- <div class="all-products">
        <ul>
            {
                products.map((product) => (
                    <li>
                        <a href={"/product/" + product.slug.current}>
                            <div class="products">
                                <img src={urlFor(product.images[0]).url()} />
                                <div class="product-details">
                                    <span>{product.title}</span>
                                    <span>${product.price}</span>
                                </div>
                            </div>
                        </a>
                        <button
              class="btn-addToCart"
              onClick={() => addToCart({
                slug: product.slug.current,
                title: product.title,
                price: product.price,
                images: product.images
              })}
            >
                            <svg
                                xmlns="http://www.w3.org/2000/svg"
                                width="1.5em"
                                height="1.5em"
                                viewBox="0 0 24 24"
                            >
                                <path
                                    fill="white"
                                    d="M17 18a2 2 0 0 1 2 2a2 2 0 0 1-2 2a2 2 0 0 1-2-2c0-1.11.89-2 2-2M1 2h3.27l.94 2H20a1 1 0 0 1 1 1c0 .17-.05.34-.12.5l-3.58 6.47c-.34.61-1 1.03-1.75 1.03H8.1l-.9 1.63l-.03.12a.25.25 0 0 0 .25.25H19v2H7a2 2 0 0 1-2-2c0-.35.09-.68.24-.96l1.36-2.45L3 4H1zm6 16a2 2 0 0 1 2 2a2 2 0 0 1-2 2a2 2 0 0 1-2-2c0-1.11.89-2 2-2m9-7l2.78-5H6.14l2.36 5z"
                                />
                            </svg>
                            Add to cart
                        </button>
                    </li>
                ))
            }
        </ul>
    </div> -->

    <FiltersWrapper
        products={products}
        categories={categories}
        filters={filters}
        client:load
    />
</Layout>

<style>
    /* .all-products ul {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        list-style-type: none;
        gap: 20px;
        margin: 30px 10px;
    }
    .all-products ul li {
        display: flex;
        flex-direction: column;
    }
    .products img {
        height: 450px;
        aspect-ratio: 1/1;
        object-fit: cover;
        width: 100%;
    }
    .all-products ul li a {
        text-decoration: none;
        text-transform: uppercase;
        font-family: "Lato", sans-serif;
        font-weight: 700;
        font-style: normal;
        text-align: center;
    }
    .product-details {
        display: flex;
        justify-content: space-between;
    }
    .btn-addToCart {
        color: #fff;
        background-color: #000;
        padding: 16px 32px;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        gap: 10px;
    } */
    .filters-section {
        padding: 0px 21.5px;
        display: none;
        flex-direction: column;
        background-color: #c4bfbf;
        height: 100vh;
    }
    .filters-col1 {
        display: flex;
        padding: 1.3rem 0px;
        justify-content: space-between;
    }
    .filters-body {
        display: flex;
    }
    .filterBy a {
        text-decoration: none;
        color: #000;
        padding: 10px 5px;
    }
    .filterBy a:hover {
        background-color: #cac8c8;
    }
    .filtering-options {
        display: flex;
        flex-direction: column;
        padding: 0px 50px 0px 25px;
    }
    .filter-by-category {
        display: flex;
        flex-direction: column;
        padding: 0px 50px 0px 25px;
    }
    .btn-form-submit {
        background-color: #000;
        padding: 16px 32px;
        cursor: pointer;
        color: #fff;
        border: none;
        border-radius: 4px;
    }
    /* Hide the default checkbox */
    .custom-checkbox input[type="checkbox"] {
        display: none;
    }

    /* Create a custom checkbox */
    .custom-checkbox .checkmark {
        display: inline-block;
        width: 20px;
        height: 20px;
        background: white;
        border: 1px solid black;
        margin-right: 8px;
        vertical-align: middle;
        position: relative;
    }

    /* When the checkbox is checked, add a black background */
    .custom-checkbox input[type="checkbox"]:checked + .checkmark {
        background: black;
    }

    /* Style the checkmark/indicator (hidden when not checked) */
    .custom-checkbox .checkmark:after {
        content: "";
        position: absolute;
        display: none;
    }

    /* Show the checkmark when checked */
    .custom-checkbox input[type="checkbox"]:checked + .checkmark:after {
        display: block;
    }

    /* Style the checkmark/indicator */
    .custom-checkbox .checkmark:after {
        left: 7px;
        top: 3px;
        width: 5px;
        height: 10px;
        border: solid white;
        border-width: 0 2px 2px 0;
        transform: rotate(45deg);
    }

    @media screen and (min-width: 768px) {
        .products img {
            max-width: 350px;
            min-height: auto;
        }
    }
</style>

<script>
    // filters section js code
    // const btnFilters = document.getElementById("btnFilters");
    // const closeFilters = document.getElementById("closeFilters");

    // btnFilters?.addEventListener("click", () => {
    //     let filtersSection = document.querySelector(".filters-section");
    //     if (filtersSection.style.display != "block")
    //         filtersSection.style.display = "flex";
    // });

    // closeFilters.addEventListener("click", () => {
    //     let filtersSection = document.querySelector(".filters-section");
    //     filtersSection.style.display = "none";
    // });

    // end of filters section js code

    // basically, if i go on with astro it will be static rendering so i need to implement the changes statically.
    // Now i understand why the most webshops have a button to show the results for query, because it is a script behind that allows to do it s thing and then you can show the products based on that thing.
    //find out more details about frontmatter and server side rendering
</script>
