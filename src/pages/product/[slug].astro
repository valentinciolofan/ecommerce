---
import Layout from "../../layouts/Layout.astro";
import { sanityClient } from "sanity:client";
import React from 'react'
import { addToCart } from '../../components/UserContext';
import { type Product } from "../../types/types";
import { AddtoCart } from "../../components/ReactComponents/ProductListing"
import urlFor from "../../utils/urlFor";

export const prerender = true;
export async function getStaticPaths() {
  const products: Product[] = await sanityClient.fetch(`*[_type == "product"]`);
  return products.map(
    ({
      slug,
      title,
      price,
      images,
      image,
      color,
      description,
      availability,
      size,
      material,
    }) => {
      return {
        params: { slug: slug.current },
        props: {
          title,
          price,
          images,
          image,
          color,
          description,
          availability,
          size,
          material,
        },
      };
    },
  );
}
const { slug } = Astro.params;
const {
  title,
  price,
  images,
  image,
  color,
  description,
  availability,
  size,
  material,
} = Astro.props;

const productDetails = {
  slug: slug,
  title: title,
  price: price,
  color: color,
  size: size,
  image: image
};


---

<Layout title=`${slug} - Fashion Culture`>
  <div class="product-container">
   <div class="product-wrapper">
    <div class="product-images">
      {
        images.map((image) => (
          <div>
            <img class="product-image" src={urlFor(image).url()} alt="" />
          </div>
        ))
      }
      <a class="prev">&#10094;</a>
      <a class="next">&#10095;</a>
    </div>
    <div class="product-info">
      <div>
      <p>{title}</p>
      <p>${price}</p>
      </div>
      <p>{description}</p>
      <ul class="product-sizes-list">
        <li>S</li>
        <li>M</li>
        <li>L</li>
        <li>XL</li>
        <li>XXL</li>
      </ul>
      <svg id="addToFav" xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24"><path fill="currentColor" d="m12.1 18.55l-.1.1l-.11-.1C7.14 14.24 4 11.39 4 8.5C4 6.5 5.5 5 7.5 5c1.54 0 3.04 1 3.57 2.36h1.86C13.46 6 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5c0 2.89-3.14 5.74-7.9 10.05M16.5 3c-1.74 0-3.41.81-4.5 2.08C10.91 3.81 9.24 3 7.5 3C4.42 3 2 5.41 2 8.5c0 3.77 3.4 6.86 8.55 11.53L12 21.35l1.45-1.32C18.6 15.36 22 12.27 22 8.5C22 5.41 19.58 3 16.5 3"></path></svg>
      <AddtoCart productDetails={productDetails} client:only/>
    </div>
  </div>
    </div>

   
   

     <div>
      <p> You might also be interested in: </p>
     </div>
  </div>
  <script type="module">
    // This code runs immediately when the module loads
    const slug = window.location.pathname.slice(9);
  
    // Function to save the desired product to the wishlist
    const saveDesiredProduct = async () => {
      try {
        const response = await fetch('http://localhost:3000/wishlist', {
          method: 'POST',
          credentials: 'include',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ productSlug: slug })
        });
  
        const result = await response.json();
        if (result.success) {
          console.log('Favorite saved successfully.');
        } else {
          console.error('Failed to save favorite:', result.error);
        }
      } catch (error) {
        console.error('Error:', error);
      }
    };
  
    // Add the event listener to the SVG element once the DOM is fully loaded
    document.addEventListener('DOMContentLoaded', () => {
      const svgElement = document.querySelector('#addToFav');
      if (svgElement) {
        svgElement.addEventListener('click', saveDesiredProduct);
      }
    });
  </script>  
</Layout>

<style>
  .product-container {
    display: flex;
    height: 80vh;
    flex-direction: column;
    gap: 40px;
    min-width: 300px;
    justify-content: center;
    align-content: center;
  }
  .product-wrapper {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }
  .product-images {
    position: relative;

  }
  .product-image {
    display: none;
    border-radius: 2px;
    max-width: 100%;
    max-height: 600px;
    aspect-ratio: 0.5;
    object-fit: cover;
  }
  .prev,
  .next {
    cursor: pointer;
    position: absolute;
    top: 50%;
    width: auto;
    margin-top: -22px;
    padding: 16px;
    color: rgb(10, 10, 10);
    background-color: #fff;
    font-weight: bold;
    font-size: 18px;
    transition: 0.6s ease;
    border-radius: 0 3px 3px 0;
    user-select: none;
  }
  .next {
    right: 0;
    border-radius: 3px 0 0 3px;
  }
  .prev:hover,
  .next:hover {
    background-color: rgba(214, 214, 214, 0.8);
  }
  .active,
  .dot:hover {
    background-color: #d3d2d2;
  }
  .fade {
    animation-name: fade;
    animation-duration: 1.5s;
  }
  @keyframes fade {
    from {
      opacity: 0.4;
    }
    to {
      opacity: 1;
    }
  }
  .product-info p {
    line-height: 1.5;
  }
  .product-info {
    display: flex;
    flex-direction: column;
    gap: 20px;
    font-size: 12px;
  }
  .product-sizes-list {
    display: flex;
    gap: 10px;
    justify-content: center;
    align-content: center;
    font-size: 16px;
    padding: 16px;
    list-style-type: none;
  }
  .product-sizes-list li {
    cursor: pointer;
  }

@media screen and (min-width: 600px) {
  .product-container {
  }
  .product-wrapper {
    flex-direction: row;
    justify-content: space-around;
    align-content:center;
  }
  .product-info {
    justify-content: center;
    max-width: 300px;
  }
  .product-images {
    
  }
}
@media screen and (min-width: 1024px) {
  .product-wrapper {
    justify-content: space-between;
    align-content:center;
  }
  .product-info {
    padding: 0px 100px;
  }
}

@media only screen and (min-width: 1200px) {
  .product-wrapper {
    justify-content: space-evenly;
    align-content:center;
  }
  .product-info {
    padding: 0px 0px;
  }
}
</style>
<script type="module">
  let slideIndex = 1;
  showSlides(slideIndex);
  const prevBtn = document.querySelector(".prev");
  const nextBtn = document.querySelector(".next");

  prevBtn.addEventListener("click", () => showSlides((slideIndex += -1)));
  nextBtn.addEventListener("click", () => showSlides((slideIndex += 1)));

  function showSlides(n) {
    let slides = document.querySelectorAll(".product-image");
    if (n > slides.length) {
      slideIndex = 1;
    }
    if (n < 1) {
      slideIndex = slides.length;
    }
    for (let slide of slides) {
      slide.style.display = "none";
    }
    slides[slideIndex - 1].style.display = "block";
  }

</script>
